import { Language } from '../models';

/**
 * Converts a language ID to a strongly-typed enum value.
 */
export const languageIdToEnum = (languageId: string): Language => {
  switch (languageId.toLowerCase()) {
    case 'c':
      return Language.C;
    case 'clojure':
      return Language.CLOJURE;
    case 'coffeescript':
      return Language.COFFEESCRIPT;
    case 'cpp':
      return Language.CPP;
    case 'csharp':
      return Language.CSHARP;
    case 'css':
      return Language.CSS;
    case 'cudacpp':
      return Language.CUDACPP;
    case 'dockerfile':
      return Language.DOCKERFILE;
    case 'go':
      return Language.GO;
    case 'groovy':
      return Language.GROOVY;
    case 'handlebars':
      return Language.HANDLEBARS;
    case 'haskell':
      return Language.HASKELL;
    case 'hcl':
      return Language.HCL;
    case 'html':
      return Language.HTML;
    case 'ini':
      return Language.INI;
    case 'java':
      return Language.JAVA;
    case 'javascript':
      return Language.JAVASCRIPT;
    case 'json':
      return Language.JSON;
    case 'julia':
      return Language.JULIA;
    case 'kotlin':
      return Language.KOTLIN;
    case 'latex':
      return Language.LATEX;
    case 'less':
      return Language.LESS;
    case 'lua':
      return Language.LUA;
    case 'makefile':
      return Language.MAKEFILE;
    case 'markdown':
      return Language.MARKDOWN;
    case 'objectivec':
      return Language.OBJECTIVEC;
    case 'objectivecpp':
      return Language.OBJECTIVECPP;
    case 'perl':
      return Language.PERL;
    case 'php':
      return Language.PHP;
    case 'plaintext':
      return Language.PLAINTEXT;
    case 'protobuf':
      return Language.PROTOBUF;
    case 'pbtxt':
      return Language.PBTXT;
    case 'python':
      return Language.PYTHON;
    case 'r':
      return Language.R;
    case 'ruby':
      return Language.RUBY;
    case 'rust':
      return Language.RUST;
    case 'sass':
      return Language.SASS;
    case 'scala':
      return Language.SCALA;
    case 'scss':
      return Language.SCSS;
    case 'shell':
      return Language.SHELL;
    case 'sql':
      return Language.SQL;
    case 'starlark':
      return Language.STARLARK;
    case 'swift':
      return Language.SWIFT;
    case 'tsx':
      return Language.TSX;
    case 'typescript':
      return Language.TYPESCRIPT;
    case 'visualbasic':
      return Language.VISUALBASIC;
    case 'vue':
      return Language.VUE;
    case 'xml':
      return Language.XML;
    case 'xsl':
      return Language.XSL;
    case 'yaml':
      return Language.YAML;
    case 'svelte':
      return Language.SVELTE;
    case 'toml':
      return Language.TOML;
    case 'dart':
      return Language.DART;
    case 'rst':
      return Language.RST;
    case 'ocaml':
      return Language.OCAML;
    case 'cmake':
      return Language.CMAKE;
    case 'pascal':
      return Language.PASCAL;
    case 'elixir':
      return Language.ELIXIR;
    case 'fsharp':
      return Language.FSHARP;
    case 'lisp':
      return Language.LISP;
    case 'matlab':
      return Language.MATLAB;
    case 'powershell':
      return Language.POWERSHELL;
    case 'solidity':
      return Language.SOLIDITY;
    case 'ada':
      return Language.ADA;
    case 'ocaml_interface':
      return Language.OCAML_INTERFACE;
    default:
      return Language.UNSPECIFIED;
  }
};
